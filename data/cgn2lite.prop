# Mapping tussen CGN en UD
# probeer het zo te doen dat de mapping functioneert als tagconversie en als query conversie
# dwz er zit voldoende informatie in voor hele tags features in combinatie om te zetten
# en ook zoveel mogelijk houvast om losse features in queries om te zetten
# zie ook http://universaldependencies.org/v2/postags.html voor de boundary issues

### main part of speech

cgnl:pos=LID ↔ cgn:pos=LID
cgnl:pos=ADJ ↔ cgn:pos=ADJ
cgnl:pos=VZ ↔ cgn:pos=VZ
cgnl:pos=ADP ↔ cgn:pos=ADP
cgnl:pos=BW ↔ cgn:pos=BW
cgnl:pos=VG ↔ cgn:pos=VG
cgnl:pos=DET ↔ cgn:pos=DET
cgnl:pos=INTJ ↔ cgn:pos=INTJ
cgnl:pos=N ↔ cgn:pos=N
cgnl:pos=TW ↔ cgn:pos=TW
cgnl:pos=TSW ↔ cgn:pos=TSW
cgnl:pos=VNW ↔ cgn:pos=VNW 
cgnl:pos=LET ↔ cgn:pos=LET
cgnl:pos=SPEC ↔ cgn:pos=SPEC
cgnl:pos=WW  ↔ cgn:pos=WW

cgnl:feat.ntype=eigen ↔ cgn:feat.ntype=eigen
# cgnl:feat.ntype=soort ↔ cgn:feat.ntype=soort

# spectype

cgnl:feat.spectype=deeleigen ↔ cgn:feat.spectype=deeleigen
cgnl:feat.spectype=vreemd ↔ cgn:feat.spectype=vreemd
cgnl:feat.spectype=afk ↔ cgn:feat.spectype=afk
cgnl:feat.spectype=afgebr ↔ cgn:feat.spectype=afgebr
cgnl:feat.spectype=symb ↔ cgn:feat.spectype=symb
cgnl:feat.spectype=meta ↔ cgn:feat.spectype=meta

vrij_is_mogelijk ↔ cgn:pos=ADJ ∨ cgn:pos=TW ∨ cgn:pos=WW ∨ cgn:feat.vwtype=aanw ∨  cgn:feat.vwtype=vrag ∨ cgn:feat.vwtype=onbep

cgnl:feat.positie=vrij ↔ vrij_is_mogelijk ∧ (cgn:feat.positie=vrij ∨ (cgn:feat.positie=postnom ∧ cgn:pos=WW ∧ cgn:feat.wvorm=inf)  ∨ (cgn:feat.vwtype=vrag) ∨ (cgn:feat.positie=prenom ∧ cgn:pos=WW ∧ cgn:feat.wvorm=inf))

cgnl:feat.positie=nom ↔ (cgn:feat.positie=nom ∨ cgn:feat.pdtype=pron) ∧ (cgn:pos=ADJ ∨ cgn:pos=TW ∨ cgn:pos=WW ∨ cgn:feat.vwtype=aanw ∨  cgn:feat.vwtype=vb ∨ cgn:feat.vwtype=bez ∨ cgn:feat.vwtype=onbep)
cgnl:feat.positie=postnom ↔ cgn:feat.positie=postnom ∧ ¬cgn:feat.wvorm=inf
cgnl:feat.positie=prenom ↔ cgn:feat.positie=prenom ∧ ¬cgn:feat.wvorm=inf


# vz types
cgnl:feat.vztype=versm  ↔ cgn:feat.vztype=versm
cgnl:feat.vztype=fin ↔ cgn:feat.vztype=fin
cgnl:feat.vztype=init ↔ cgn:feat.vztype=init

# werkwoorden: wvorm blijft
cgnl:feat.wvorm=od ↔ cgn:feat.wvorm=od
cgnl:feat.wvorm=vd ↔ cgn:feat.wvorm=vd
cgnl:feat.wvorm=pv ↔ cgn:feat.wvorm=pv
cgnl:feat.wvorm=inf ↔ cgn:feat.wvorm=inf

# van de trappen van vergelijking alleen dim
cgnl:feat.graad=dim ↔ cgn:feat.graad=dim

#cgnl:feat.graad=comp ↔ (cgn:feat.graad=comp)
#cgnl:feat.graad=basis ↔ (cgn:feat.graad=basis)
#cgnl:feat.graad=sup ↔ (cgn:feat.graad=sup)

# houden we numtype? gaat het weg?
cgnl:feat.numtype=hoofd ↔ cgn:feat.numtype=hoofd
cgnl:feat.numtype=rang ↔ cgn:feat.numtype=rang


# voornaamwoordengedoe....

#cgnl:feat.pdtype=pron ↔ cgn:pos=VNW ∧ (cgn:feat.pdtype=pron ∨ (cgn:feat.pdtype=det ∧ cgn:feat.positie=nom)) ∧ (cgn:feat.vwtype=aanw ∨  cgn:feat.vwtype=onbep ∨  cgn:feat.vwtype=vb)
#cgnl:feat.pdtype=det ↔ cgn:pos=VNW ∧ (cgn:feat.pdtype=det ∧ ¬cgn:feat.positie=nom) ∧ (cgn:feat.vwtype=aanw ∨  cgn:feat.vwtype=onbep ∨  cgn:feat.vwtype=vb)

cgnl:feat.pdtype=adv-pron ↔ cgn:pos=VNW ∧ cgn:feat.pdtype=adv-pron

cgnl:feat.vwtype=bez ↔ cgn:pos=VNW ∧ cgn:feat.vwtype=bez
cgnl:feat.vwtype=aanw ↔ cgn:feat.vwtype=aanw
cgnl:feat.vwtype=refl ↔ cgn:feat.vwtype=refl ∨ cgn:feat.vwtype=pr
cgnl:feat.vwtype=excl ↔  cgn:feat.vwtype=excl
cgnl:feat.vwtype=onbep ↔  cgn:feat.vwtype=onbep
cgnl:feat.vwtype=vb ↔ cgn:feat.vwtype=vb ∨ cgn:feat.vwtype=vrag
cgnl:feat.vwtype=pers ↔ cgn:feat.vwtype=pers
cgnl:feat.vwtype=recip ↔ cgn:feat.vwtype=recip
cgnl:feat.vwtype=betr ↔ cgn:feat.vwtype=betr

# we houden conjtype

cgnl:feat.conjtype=neven  ↔ cgn:feat.conjtype=neven
cgnl:feat.conjtype=onder  ↔ cgn:feat.conjtype=onder

# weer wat lelijkheden

¬(cgn:feat.wvorm=inf ∧ cgn:pos=ADJ)
¬(cgn:feat.wvorm=inf ∧ cgn:pos=VNW)
¬(cgn:feat.wvorm=inf ∧ cgn:pos=TW)
¬(cgn:feat.wvorm=inf ∧ cgn:feat.wvorm=vd)
¬(cgn:feat.wvorm=inf ∧ cgn:feat.wvorm=od)
#¬(cgn:feat.positie=prenom ∧ cgn:feat.positie=nom)
